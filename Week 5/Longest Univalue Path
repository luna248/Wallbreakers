/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {

    /* For this solution I have used a global variable */
    public int maxCount=0;

    public int longestUnivaluePath(TreeNode root) {
        nextValIsSame( root );
        return maxCount;
    }

    public int nextValIsSame(TreeNode root){
        if(root==null){ return 0; }

        int left = nextValIsSame(root.left);
        int right = nextValIsSame(root.right);

        int lcount=0;
        int rcount=0;
        if(root.left!=null && root.left.val == root.val) { lcount = left+1; }
        if(root.right!=null && root.right.val == root.val) { rcount = right+1; }

        maxCount = Math.max(maxCount, lcount + rcount);
        return Math.max(lcount, rcount);
    }
}
